version: '3.9'

services:
    postgres:
        image: postgres:latest
        restart: always
        container_name: postgres
        ports:
            - 5432:5432
        environment:
            POSTGRES_USER: ${POSTGRES_USER}
            POSTGRES_PASSWORD: ${POSTGRES_PW}
            POSTGRES_DB: ${POSTGRES_DB}
            PGDATA: /data/postgres
        volumes:
            - postgres_data:/data/postgres
        healthcheck:
            test: ['CMD-SHELL', 'pg_isready -U ${POSTGRES_USER}']
            interval: 960s
            timeout: 5s
            retries: 5
        labels:
            - 'com.example.description=Postgres database for PDF website'
            - 'com.example.department=Production'

    pgadmin:
        image: dpage/pgadmin4
        restart: always
        container_name: pgadmin
        ports:
            - '5050:80'
        environment:
            PGADMIN_DEFAULT_EMAIL: ${PGADMIN_MAIL}
            PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_PW}

volumes:
    postgres_data:
# version: '3.9'

# services:
#     postgres:
#         image: postgres:latest
#         restart: always
#         container_name: postgres
#         ports:
#             - 5432:5432
#         environment:
#             POSTGRES_USER: ${DB_USER}
#             POSTGRES_PASSWORD: ${DB_PASSWORD}
#             POSTGRES_DB: ${DB_NAME}
#             PGDATA: /data/postgres
#         volumes:
#             - postgres_data:/data/postgres
#             - ./init.sql:/docker-entrypoint-initdb.d/init.sql
#         healthcheck:
#             test: ['CMD-SHELL', 'pg_isready -U ${DB_USER}']
#             interval: 10s
#             timeout: 5s
#             retries: 5
# #         labels:
# #             - 'com.example.description=Postgres database for PDF website'
# #             - 'com.example.department=Production'
# version: '3.9'

# services:
#     postgres:
#         image: postgres:latest
#         restart: always
#         container_name: postgres
#         ports:
#             - 5432:5432
#         environment:
#             # POSTGRES_USER:marco001
#             # POSTGRES_PASSWORD:mmarcpww
#             # POSTGRES_DB:postgres
#             # PGDATA: /data/postgres
#         volumes:
#             - postgres_data:/data/postgres
#             - ./init.sql:/docker-entrypoint-initdb.d/init.sql
#         healthcheck:
#             test: ['CMD-SHELL', 'pg_isready -U ${DB_USER}']
#             interval: 10s
#             timeout: 5s
#             retries: 5
#         labels:
#             - 'com.example.description=Postgres database for PDF website'
#             - 'com.example.department=Production'
# volumes:
#     postgres_data:
######### zum debugging
# services:
#   MyWebsite:
#     image: postgres
#     restart: always
#     container_name: MyWebsite
#     ports:
#       - 5432:5432
#     environment:
#       POSTGRES_PASSWORD: Iphone5S
#       PGDATA: /data/postgres
#     volumes:
#       # - ~/dockerfiles/postgres:/data/postgres
#       - c:/Users/tozzi/Git/devfinder/dockervolume/postgres:/data/postgres
# volumes:
#   postgres:
