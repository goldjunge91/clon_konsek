version: '3.9'

services:
    postgres:
        image: postgres:latest
        restart: always
        container_name: postgres
        ports:
            - 5432:5432
        environment:
            POSTGRES_USER: ${DB_USER}
            POSTGRES_PASSWORD: ${DB_PASSWORD}
            POSTGRES_DB: ${DB_NAME}
            PGDATA: /data/postgres
        volumes:
            - postgres_data:/data/postgres
        healthcheck:
            test: ['CMD-SHELL', 'pg_isready -U ${DB_USER}']
            interval: 10s
            timeout: 5s
            retries: 5
        labels:
            - 'com.example.description=Postgres database for PDF website'
            - 'com.example.department=Production'

    crontab-ui:
        image: alseambusher/crontab-ui
        ports:
            - 8000:8000
        volumes:
            - /var/run/docker.sock:/var/run/docker.sock
            - /tmp:/tmp
        environment:
            - CRON_PATH=/tmp/crontab
        labels:
            - 'com.example.description=Crontab UI for managing cron jobs'
            - 'com.example.department=Production'

volumes:
    postgres_data:
######### zum debugging
# services:
#   MyWebsite:
#     image: postgres
#     restart: always
#     container_name: MyWebsite
#     ports:
#       - 5432:5432
#     environment:
#       POSTGRES_PASSWORD: Iphone5S
#       PGDATA: /data/postgres
#     volumes:
#       # - ~/dockerfiles/postgres:/data/postgres
#       - c:/Users/tozzi/Git/devfinder/dockervolume/postgres:/data/postgres
# volumes:
#   postgres:
