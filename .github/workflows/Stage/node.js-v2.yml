name: Node.js CI/CD

on:
    push:
        branches: ['production']

jobs:
    build-and-deploy:
        runs-on: self-hosted
        env:
            NODE_ENV: production
            ENABLE_GOOGLE_AUTH: ${{ secrets.ENABLE_GOOGLE_AUTH }}
            GOOGLE_CLIENT_ID: ${{ secrets.GOOGLE_CLIENT_ID }}
            GOOGLE_CLIENT_SECRET: ${{ secrets.GOOGLE_CLIENT_SECRET }}
            ENCRYPTION_KEY: ${{ secrets.ENCRYPTION_KEY }}
            ENCRYPTION_IV: ${{ secrets.ENCRYPTION_IV }}
            NEXTAUTH_URL: ${{ secrets.NEXTAUTH_URL }}
            NEXT_PUBLIC_API_URL: ${{ secrets.NEXT_PUBLIC_API_URL }}
            NEXTAUTH_SECRET: ${{ secrets.NEXTAUTH_SECRET }}
            POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
            POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
            POSTGRES_PW: ${{ secrets.POSTGRES_PW }}
            DATABASE_URL: postgresql://${{ secrets.POSTGRES_USER }}:${{ secrets.POSTGRES_PW }}@localhost:5432/${{ secrets.POSTGRES_DB }}

        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Setup Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: '20'

            - name: Check Node.js version
              run: |
                  . ~/.nvm/nvm.sh
                  echo "Node.js version: $(node -v)"
                  echo "npm version: $(npm -v)"

            - name: Clear npm cache
              run: npm cache clean --force

            - name: Cache node modules
              uses: actions/cache@v4
              id: cache-nodemodules
              with:
                  path: |
                      **/node_modules
                      ~/.npm
                  key: ${{ runner.os }}-node-modules-${{ hashFiles('**/package-lock.json') }}
                  restore-keys: |
                      ${{ runner.os }}-node-modules-
              continue-on-error: true

            - name: Cache Next.js build
              uses: actions/cache@v4
              with:
                  path: ${{ github.workspace }}/.next/cache
                  key: ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-${{ hashFiles('**/*.{js,jsx,ts,tsx,cjs,mjs}') }}
                  restore-keys: |
                      ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-
                      ${{ runner.os }}-nextjs-
              continue-on-error: true

            - name: Increase swap space
              run: |
                  sudo swapoff -a
                  sudo fallocate -l 6G /swapfile
                  sudo chmod 600 /swapfile
                  sudo mkswap /swapfile
                  sudo swapon /swapfile

            - name: Increase memory limit for Node.js
              run: export NODE_OPTIONS="--max-old-space-size=4096"

            - name: Install essential dependencies
              run: |
                  npm ci --ignore-scripts --no-audit --no-fund --omit=dev
                  npm ci --ignore-scripts --no-audit --no-fund --only=dev

            - name: Install bcrypt and sharp separately
              run: |
                  npm install bcrypt --no-audit --no-fund
                  npm install sharp --no-audit --no-fund
            - name: Install dependencies
              run: |
                  . ~/.nvm/nvm.sh
                  export NVM_DIR="$HOME/.nvm"
                  [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"
                  npm ci
                  npm install autoprefixer postcss tailwindcss --save-dev

            - name: Verify installations
              run: |
                  npm list autoprefixer
                  npm list postcss
                  npm list tailwindcss

            - name: Check PostCSS config
              run: |
                  if [ -f "postcss.config.js" ]; then
                    echo "PostCSS config content:"
                    cat postcss.config.js
                  else
                    echo "postcss.config.js not found. Creating a basic config."
                    echo "module.exports = { plugins: { tailwindcss: {}, autoprefixer: {} } }" > postcss.config.js
                  fi

            - name: Build
              run: npm run build

            - name: Run Deployment
              run: |
                  . ~/.nvm/nvm.sh
                  export NVM_DIR="$HOME/.nvm"
                  [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"
                  pm2 --version
                  NODE_PATH=$(which node)
                  PM2_EXEC_PATH=$(which pm2)
                  echo "Node path: $NODE_PATH"
                  echo "PM2 path: $PM2_EXEC_PATH"
                  $PM2_EXEC_PATH restart ecosystem.config.cjs
              continue-on-error: true
