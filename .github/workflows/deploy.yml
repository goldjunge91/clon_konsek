name: Node.js Deployment

on:
  push:
    branches: ["production"]

jobs:
  build:
    runs-on: self-hosted
    env:
      GOOGLE_CLIENT_ID: ${{ secrets.GOOGLE_CLIENT_ID }}
      GOOGLE_CLIENT_SECRET: ${{ secrets.GOOGLE_CLIENT_SECRET }}
      ENCRYPTION_KEY: ${{ secrets.ENCRYPTION_KEY }}
      ENCRYPTION_IV: ${{ secrets.ENCRYPTION_IV }}
      NEXTAUTH_URL: ${{ secrets.NEXTAUTH_URL }}
      NEXT_PUBLIC_API_URL: ${{ secrets.NEXT_PUBLIC_API_URL }}
      NEXTAUTH_SECRET: ${{ secrets.NEXTAUTH_SECRET }}
      POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
      POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
      POSTGRES_PW: ${{ secrets.POSTGRES_PW }}
      ENABLE_GOOGLE_AUTH: ${{ secrets.ENABLE_GOOGLE_AUTH }}
      DATABASE_URL: postgresql://${{ secrets.POSTGRES_USER }}:${{ secrets.POSTGRES_PW }}@localhost:5432/${{ secrets.POSTGRES_DB }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Stop PM2 Ecosystem
        run: |
          . ~/.nvm/nvm.sh
          export NVM_DIR="$HOME/.nvm"
          [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"
          pm2 stop ecosystem.config.cjs || true
        continue-on-error: true

      - name: Create .env file
        run: |
          cat << EOF > .env
          GOOGLE_CLIENT_ID=${{ secrets.GOOGLE_CLIENT_ID }}
          GOOGLE_CLIENT_SECRET=${{ secrets.GOOGLE_CLIENT_SECRET }}
          ENCRYPTION_KEY=${{ secrets.ENCRYPTION_KEY }}
          ENCRYPTION_IV=${{ secrets.ENCRYPTION_IV }}
          NEXT_PUBLIC_API_URL=${{ secrets.NEXT_PUBLIC_API_URL }}
          NEXTAUTH_URL=${{ secrets.NEXTAUTH_URL }}
          NEXTAUTH_SECRET=${{ secrets.NEXTAUTH_SECRET }}
          DB_HOST=${{ secrets.DB_HOST }}
          POSTGRES_DB=${{ secrets.POSTGRES_DB }}
          POSTGRES_USER=${{ secrets.POSTGRES_USER }}
          POSTGRES_PW=${{ secrets.POSTGRES_PW }}
          ENABLE_GOOGLE_AUTH=${{ secrets.ENABLE_GOOGLE_AUTH }}
          DATABASE_URL=postgresql://${{ secrets.POSTGRES_USER }}:${{ secrets.POSTGRES_PW }}@localhost:5432/${{ secrets.POSTGRES_DB }}
          EOF

      - name: Verify secrets
        run: |
          echo "Verifying secrets..."
          [ -z "$GOOGLE_CLIENT_ID" ] && echo "GOOGLE_CLIENT_ID is missing" || echo "GOOGLE_CLIENT_ID is set"
          [ -z "$GOOGLE_CLIENT_SECRET" ] && echo "GOOGLE_CLIENT_SECRET is missing" || echo "GOOGLE_CLIENT_SECRET is set"
          [ -z "$ENCRYPTION_KEY" ] && echo "ENCRYPTION_KEY is missing" || echo "ENCRYPTION_KEY is set"
          [ -z "$ENCRYPTION_IV" ] && echo "ENCRYPTION_IV is missing" || echo "ENCRYPTION_IV is set"
          [ -z "$NEXTAUTH_URL" ] && echo "NEXTAUTH_URL is missing" || echo "NEXTAUTH_URL is set"
          [ -z "$NEXT_PUBLIC_API_URL" ] && echo "NEXT_PUBLIC_API_URL is missing" || echo "NEXT_PUBLIC_API_URL is set"
          [ -z "$NEXTAUTH_SECRET" ] && echo "NEXTAUTH_SECRET is missing" || echo "NEXTAUTH_SECRET is set"
          [ -z "$POSTGRES_DB" ] && echo "POSTGRES_DB is missing" || echo "POSTGRES_DB is set"
          [ -z "$POSTGRES_USER" ] && echo "POSTGRES_USER is missing" || echo "POSTGRES_USER is set"
          [ -z "$POSTGRES_PW" ] && echo "POSTGRES_PASSWORD is missing" || echo "POSTGRES_PASSWORD is set"
          [ -z "$ENABLE_GOOGLE_AUTH" ] && echo "ENABLE_GOOGLE_AUTH is missing" || echo "ENABLE_GOOGLE_AUTH is set"
        shell: bash
        continue-on-error: true
      - name: Check Node.js version
        run: |
          . ~/.nvm/nvm.sh
          echo "Node.js version: $(node -v)"
          echo "npm version: $(npm -v)"
      - name: Cache node modules
        uses: actions/cache@v4
        id: cache-nodemodules
        with:
          path: |
            **/node_modules
            ~/.npm
          key: ${{ runner.os }}-node-modules-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-modules-
        continue-on-error: true

      - name: Cache Next.js build output
        uses: actions/cache@v4
        with:
          path: ${{ github.workspace }}/.next/cache
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-${{ hashFiles('**/*.{js,jsx,ts,tsx,cjs,mjs}')}}
          restore-keys: |
            ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-
            ${{ runner.os }}-nextjs-
        continue-on-error: true
      - name: Verify environment setup
        run: |
          if [ -s ".env" ]; then
            echo ".env file exists and is not empty."
          else
            echo ".env file is missing or empty."
            exit 1
          fi

      - name: Check PM2 installation
        run: |
          . ~/.nvm/nvm.sh
          export NVM_DIR="$HOME/.nvm"
          [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"
          if ! command -v pm2 &> /dev/null; then
            echo "PM2 is not installed."
            npm install -g pm2
          else
            echo "PM2 is installed."
          fi
          pm2 --version
      - name: Docker restart
        run: |
          docker restart postgres
        continue-on-error: true

      - name: Run startup script and restart PM2 Ecosystem
        run: |
          . ~/.nvm/nvm.sh
          export NVM_DIR="$HOME/.nvm"
          [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"

           cd /home/runneruser/actions-runner/_work/pdf-website/pdf-website
           chmod +x ./pm2-set-env.sh

           # Restart PM2 Ecosystem
           pm2 restart ecosystem.config.cjs
      - name: Debug information
        run: |
          echo "Checking application status:"
          pm2 show pdf_konsek
          echo "Checking application logs:"
          pm2 logs pdf_konsek --lines 50
          echo "Checking listening ports:"
          netstat -tuln | grep LISTEN
          echo "Checking nginx configuration (if applicable):"
          sudo nginx -T || echo "Nginx not installed or not configured"
        continue-on-error: true

      - name: Stop PM2 if previous steps failed
        if: failure()
        run: |
          . ~/.nvm/nvm.sh
          export NVM_DIR="$HOME/.nvm"
          [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"

          echo "Stopping PM2 processes due to previous step failure"
          pm2 stop all || true
          pm2 list

      # - name: Run error handling script
      #   if: failure()
      #   run: |
      #     cd /home/runneruser/actions-runner/_work/pdf-website/pdf-website
      #     chmod +x ./pm2-set-env.sh
      #     ./pm2-set-env.sh
      #   continue-on-error: true
