name: Node.js CI

on:
  push:
    branches: ["production"]

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      DATABASE_URL: ${{ secrets.DATABASE_URL }}
      GOOGLE_CLIENT_ID: ${{ secrets.GOOGLE_CLIENT_ID }}
      GOOGLE_CLIENT_SECRET: ${{ secrets.GOOGLE_CLIENT_SECRET }}
      ENCRYPTION_KEY: ${{ secrets.ENCRYPTION_KEY }}
      ENCRYPTION_IV: ${{ secrets.ENCRYPTION_IV }}
      NEXTAUTH_URL: ${{ secrets.NEXTAUTH_URL }}
      NEXT_PUBLIC_API_URL: ${{ secrets.NEXT_PUBLIC_API_URL }}
      NEXTAUTH_SECRET: ${{ secrets.NEXTAUTH_SECRET }}
      DB_HOST: ${{ secrets.DB_HOST }}
      DB_NAME: ${{ secrets.DB_NAME }}
      DB_USER: ${{ secrets.DB_USER }}
      DB_PASSWORD: ${{ secrets.DB_PASSWORD }}

    steps:
      - name: Cache npm dependencies
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.OS }}-npm-cache-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.OS }}-npm-cache-
      - name: create .env
        run: |
         echo "DB_PASSWORD=${DB_PASSWORD}" >> .env
         export DB_PASSWORD=${DB_PASSWORD}
         export DATABASE_URL=postgres://postgres:${DB_PASSWORD}@localhost:5432/postgres
         echo "DATABASE_URL=${DATABASE_URL}" >> .env.production
         echo "GOOGLE_CLIENT_ID=${GOOGLE_CLIENT_ID}" >> .env.production
         echo "GOOGLE_CLIENT_SECRET=${GOOGLE_CLIENT_SECRET}" >> .env.production
         echo "ENCRYPTION_KEY=${ENCRYPTION_KEY}" >> .env.production
         echo "ENCRYPTION_IV=${ENCRYPTION_IV}" >> .env.production
         echo "NEXTAUTH_URL=${NEXTAUTH_URL}" >> .env.production
         echo "NEXT_PUBLIC_API_URL=${NEXT_PUBLIC_API_URL}" >> .env.production
         echo "NEXTAUTH_SECRET=${NEXTAUTH_SECRET}" >> .env.production
         echo "DB_HOST=${DB_HOST}" >> .env.production
         echo "DB_NAME=${DB_NAME}" >> .env.production
         echo "DB_USER=${DB_USER}" >> .env.production
         echo "DB_PASSWORD=${DB_PASSWORD}" >> .env.production
      - name: Build production
        run: npm run build --omit=dev
      - name: Run Deployment
        run: pm2 start ecosystem.config.cjs
