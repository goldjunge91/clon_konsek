name: Node.js

on:
    push:
        branches: ['production']

jobs:
    build:
        runs-on: self-hosted
        defaults:
            run:
                working-directory: ${{ github.workspace }}

        env:
            NODE_ENV: production
            ENABLE_GOOGLE_AUTH: ${{ secrets.ENABLE_GOOGLE_AUTH }}
            GOOGLE_CLIENT_ID: ${{ secrets.GOOGLE_CLIENT_ID }}
            GOOGLE_CLIENT_SECRET: ${{ secrets.GOOGLE_CLIENT_SECRET }}
            ENCRYPTION_KEY: ${{ secrets.ENCRYPTION_KEY }}
            ENCRYPTION_IV: ${{ secrets.ENCRYPTION_IV }}
            NEXTAUTH_URL: ${{ secrets.NEXTAUTH_URL }}
            NEXT_PUBLIC_API_URL: ${{ secrets.NEXT_PUBLIC_API_URL }}
            NEXTAUTH_SECRET: ${{ secrets.NEXTAUTH_SECRET }}
            DB_HOST: ${{ secrets.DB_HOST }}
            DB_NAME: ${{ secrets.DB_NAME }}
            DB_USER: ${{ secrets.DB_USER }}
            DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
            DATABASE_URL: postgresql://${{ secrets.DB_USER }}:${{ secrets.DB_PASSWORD }}@${{ secrets.DB_HOST }}:5432/${{ secrets.DB_NAME }}
          steps:
        - name: Checkout code
          uses: actions/checkout@v4

        - name: Setup Node.js
          uses: actions/setup-node@v4
          with:
            node-version: '20'

        - name: Create .env file
          run: |
            cat << EOF > .env.${{ github.event.inputs.environment }}
            ENVIRONMENT=${{ github.event.inputs.environment }}
            # Fügen Sie hier weitere Umgebungsvariablen hinzu
            EOF

        - name: Install dependencies
          run: npm ci

        - name: Build
          run: npm run build

        - name: Deploy
          env:
            DEPLOY_MESSAGE: ${{ github.event.inputs.deploy_message }}
          run: |
            echo "Deploying to ${{ github.event.inputs.environment }} environment"
            echo "Deploy message: $DEPLOY_MESSAGE"

            # Hier fügen Sie Ihre spezifischen Deployment-Befehle ein
            # Zum Beispiel:
            # cp -R .next /path/to/your/app/
            # cp .env.${{ github.event.inputs.environment }} /path/to/your/app/.env

            # Neustart der Anwendung mit PM2
            pm2 restart ecosystem.config.cjs

        - name: Cleanup
          if: always()
          run: |

