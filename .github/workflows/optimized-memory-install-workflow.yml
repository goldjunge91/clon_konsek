name: Optimized Memory-Aware Install

#get log & tags information
on:
    workflow_dispatch:
        inputs:
            logLevel:
                description: 'Log level'
                required: true
                default: 'information'
                type: choice
                options:
                    - information
                    - debug
                    - warning
                    - critical
            tags:
                description: 'Purpose of Run This Workflow?'
                required: true
                type: string

jobs:
    install-dependencies:
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v4

            - name: Use Node.js
              uses: actions/setup-node@v3
              with:
                  node-version: '20.x'

            - name: Increase swap space
              run: |
                  sudo swapoff -a
                  sudo fallocate -l 6G /swapfile
                  sudo chmod 600 /swapfile
                  sudo mkswap /swapfile
                  sudo swapon /swapfile

            - name: Increase memory limit for Node.js
              run: export NODE_OPTIONS="--max-old-space-size=4096"

            - name: Install essential dependencies
              run: |
                  npm ci --ignore-scripts --no-audit --no-fund --omit=dev
                  npm ci --ignore-scripts --no-audit --no-fund --only=dev

            - name: Install bcrypt and sharp separately
              run: |
                  npm install bcrypt --no-audit --no-fund
                  npm install sharp --no-audit --no-fund

            - name: Install remaining dependencies
              run: npm install --no-audit --no-fund --prefer-offline --maxsockets=3 --timeout=600000

            - name: Rebuild bcrypt and sharp
              run: |
                  npm rebuild bcrypt
                  npm rebuild sharp

            - name: Update deprecated packages
              run: |
                  npx npm-check-updates -u
                  npm install

            - name: Verify Tailwind directives
              run: |
                  if grep -q "@tailwind base;" src/styles/globals.css && \
                     grep -q "@tailwind components;" src/styles/globals.css && \
                     grep -q "@tailwind utilities;" src/styles/globals.css; then
                    echo "Tailwind directives found in globals.css"
                  else
                    echo "Warning: Tailwind directives not found or incomplete in globals.css"
                  fi

            - name: Run build process
              run: npm run build
              env:
                  NODE_OPTIONS: --max-old-space-size=4096

            - name: Check for build errors
              if: failure()
              run: |
                  echo "Build failed. Checking for specific errors:"
                  if [ -f ".next/server/error.log" ]; then
                    cat .next/server/error.log
                  else
                    echo "No error log found."
                  fi

            - name: Clean up swap
              if: always()
              run: |
                  sudo swapoff /swapfile
                  sudo rm /swapfile
