{
  "compilerOptions": {
    "lib": ["dom", "dom.iterable", "esnext"],
    "allowJs": true,
    "skipLibCheck": true,
    "noErrorTruncation": true,                                 /* Skip type checking all .d.ts files. */
    "strict": true,
    "noEmit": true,
    "esModuleInterop": true,
    "moduleDetection": "auto",                        /* Control what method is used to detect module-format JS files. */
    "module": "esnext",
    "moduleResolution": "node",
    "resolveJsonModule": true,
    "isolatedModules": true,
    "jsx": "preserve",
    "incremental": true,
    "plugins": [
      {
        "name": "next"
      }
    ],
    "paths": {
      "@/*": ["./src/*"]
    }
  },

  "include": ["next-env.d.ts", "**/*.ts", "**/*.tsx", ".next/types/**/*.ts"],
  "exclude": ["node_modules"]
}
// {
//   "compilerOptions": {
//     "isolatedModules": true,
//     "composite": false,
//     "target": "esnext",
//     // "module": "esnext",
//     "moduleResolution": "bundler",
//     "lib": [
//       "dom",
//       "dom.iterable",
//       "esnext"
//     ],
//     // "lib": ["dom", "dom.iterable", "esnext", "es2020", "es2018", "es2017", "es7", "es6", "es5"],
//     // "lib": ["dom", "dom.iterable", "esnext", "es2020", "es2018", "es2017", "es7", "es6", "es5"],
//     "declaration": true, /* Generate .d.ts files from TypeScript and JavaScript files in your project. */
//     "declarationMap": false,
//     "sourceMap": true,
//     // "allowJs": true,
//     // "incremental": false,
//     "stripInternal": true, /* Disable emitting declarations that have '@internal' in their JSDoc comments. */
//     "allowSyntheticDefaultImports": true, /* Allow 'import x from y' when a module doesn't have a default export. */// "esModuleInterop": true, /* Emit additional JavaScript to ease support for importing CommonJS modules. This enables 'allowSyntheticDefaultImports' for type compatibility. */
//     "forceConsistentCasingInFileNames": true, /* Ensure that casing is correct in imports. */// "strict": true, /* Enable all strict type-checking options. */
//     "noImplicitAny": true, /* Enable error reporting for expressions and declarations with an implied 'any' type. */
//     "strictNullChecks": true, /* When type checking, take into account 'null' and 'undefined'. */
//     "strictFunctionTypes": true, /* When assigning functions, check to ensure parameters and the return values are subtype-compatible. */
//     "strictBindCallApply": true, /* Check that the arguments for 'bind', 'call', and 'apply' methods match the original function. */
//     "strictPropertyInitialization": true, /* Check for class properties that are declared but not set in the constructor. */
//     "noImplicitThis": true, /* Enable error reporting when 'this' is given the type 'any'. */
//     "useUnknownInCatchVariables": true, /* Default catch clause variables as 'unknown' instead of 'any'. */
//     "alwaysStrict": true, /* Ensure 'use strict' is always emitted. */
//     "exactOptionalPropertyTypes": false, /* Interpret optional property types as written, rather than adding 'undefined'. */
//     "noImplicitReturns": true, /* Enable error reporting for codepaths that do not explicitly return in a function. */
//     "noFallthroughCasesInSwitch": true, /* Enable error reporting for fallthrough cases in switch statements. */
//     "noUncheckedIndexedAccess": true, /* Add 'undefined' to a type when accessed using an index. */
//     "noImplicitOverride": true, /* Ensure overriding members in derived classes are marked with an override modifier. */
//     "noPropertyAccessFromIndexSignature": true, /* Enforces using indexed accessors for keys declared using an indexed type. */
//     "allowUnusedLabels": false, /* Disable error reporting for unused labels. */
//     "allowUnreachableCode": false, /* Disable error reporting for unreachable code. */// "skipLibCheck": true, /* Skip type checking all .d.ts files. */
//     "noErrorTruncation": true, /* Disable truncating types in error messages. */
//     "checkJs": true,
//     "emitDeclarationOnly": true,
//     "allowImportingTsExtensions": true,
//     "skipLibCheck": true,
//     "strict": true,
//     "noEmit": false,
//     "esModuleInterop": true,
//     "moduleDetection": "auto" /* Control what method is used to detect module-format JS files. */,
//     "module": "esnext",
//     // "module": "commonjs",
//     "resolveJsonModule": true,
//     "jsx": "preserve",
//     "incremental": true,
//     "plugins": [
//       {
//         "name": "next"
//       }
//     ],
//     "paths": {
//       "@/*": [
//         "./src/*"
//       ]
//     },
//     "allowJs": true
//   },
//   "include": [
//     "next-env.d.ts",
//     "**/*.ts",
//     "**/*.tsx",
//     ".next/types/**/*.ts"
//   ],
//   "exclude": [
//     "node_modules"
//   ]
// }
// // {
// //   "compilerOptions": {
// //     "lib": [
// //       "dom",
// //       "dom.iterable",
// //       "esnext"
// //     ],
// //     "allowJs": true,
// //     "skipLibCheck": true,
// //     "strict": false,
// //     "noEmit": true,
// //     "incremental": true,
// //     "esModuleInterop": true,
// //     "module": "esnext",
// //     "moduleResolution": "node",
// //     "resolveJsonModule": true,
// //     "isolatedModules": true,
// //     "jsx": "preserve",
// //     "plugins": [
// //       {
// //         "name": "next"
// //       }
// //     ]
// //   },
// //   "include": [
// //     "next-env.d.ts",
// //     ".next/types/**/*.ts",
// //     "**/*.ts",
// //     "**/*.tsx"
// //   ],
// //   "exclude": [
// //     "node_modules"
// //   ]
// // }
